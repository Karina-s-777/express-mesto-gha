// есть ресурсы — в проекте Mesto это пользователи и карточки.
// Каждый из ресурсов должен соответствовать задуманной структуре:
// например, у пользователя должно быть имя и информация о себе.
// Зададим схему для пользователя через Mongoose:

const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  name: {
    type: String,
    // добовляем сообщения об ошибке валидации
    required: [true, 'Заполните поле'],
    minlength: [2, 'Минимальное количество символов - 2'],
    maxlength: [30, 'Максимальное количество символов - 30'],
  },
  about: {
    type: String,
    required: [true, 'Заполните поле'],
    minlength: [2, 'Минимальное количество символов - 2'],
    maxlength: [30, 'Максимальное количество символов - 30'],
  },
  avatar: {
    type: String,
    required: [true, 'Заполните поле'],
    validate: { // опишем свойство validate
      validator(url) { // Регулярное выражение URL, начинающееся с HTTP или HTTPS
        return /^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test(url);
      },
      message: 'Неправильный url', // когда validator вернёт false, будет использовано это сообщение
    },
  },
});

// создаём модель и экспортируем её.
// Мы передали методу mongoose.model два аргумента: имя модели и схему,
// которая описывает будущие документы
module.exports = mongoose.model('user', userSchema);
